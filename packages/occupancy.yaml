input_boolean:
  medicine:
    name: Medicine Reminder
    initial: off
    icon: mdi:tablet

sensor:
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
input_select:
  who_cooks:
    name: Who cooks today
    options:
      - Paulus
      - Anne Therese
    initial: Anne Therese
    icon: mdi:panda
  living_room_preset:
    options:
      - Visitors
      - Visitors with kids
      - Home Alone

input_text:
  detected_people:
    name: "Detected People"
    initial: ""

counter:
  my_custom_counter:
    initial: 30
    step: 1

automation:
  - alias: "Add New Detected Person"
    trigger:
      - platform: mqtt
        topic: "frigate/events"
    condition:
      - condition: template
        value_template: >
          {{ trigger.payload_json.label != 'unknown' and
             not is_state('sensor.' ~ trigger.payload_json.label, 'on') }}
    action:
      - service: homeassistant.update_entity
        data:
          entity_id: "sensor.{{ trigger.payload_json.label }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.detected_people
          value: >
            {{ states('input_text.detected_people') + ',' + trigger.payload_json.label }}
  - alias: "Remove Person After Timeout"
    trigger:
      - platform: state
        entity_id: sensor.detected_people
        to: "off"
        for:
          hours: 1
    action:
      - service: input_text.set_value
        data:
          entity_id: input_text.detected_people
          value: >
            {{ states('input_text.detected_people') | replace(trigger.to_state.state, '') }}

template:
  - sensor:
      - name: "{{ trigger.payload_json.label }}"
        state: "Detected"
        attributes:
          last_seen: >
            {{ now().timestamp() | timestamp_local }}
          current_room: "{{ trigger.payload_json.camera }}"
          mood: "Neutral"
